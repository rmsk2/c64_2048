!zone tests

!ct scr
.ERR_TEST1
!tx "test 1 not ok"
.ERR_TEST2
!tx "test 2 not ok"
.TESTS_DONE
!tx "test done"
!ct pet


.VAL1 !byte $00, $00
.VAL2 !byte $00, $00
.VAL3 !byte $00, $00
.VAL4 !byte $00, $00
test16BitArithmetic
    lda #COLOR_ORANGE
    jsr setOutputColor

    jsr clearScreen
    +load16BitImmediate $12F0, .VAL1
    +load16BitImmediate $0080, .VAL2
    +move16Bit .VAL2, .VAL4
    +load16BitImmediate $1370, .VAL3
    +add16Bit .VAL2, .VAL1
    +cmp16Bit .VAL1, .VAL3
    beq .cmpOK
    +printAtPosImmediate 0, 0, .ERR_TEST1, $A7, 13
.cmpOK
    +load16BitImmediate $0100, .VAL3
    +double16Bit .VAL4
    +cmp16Bit .VAL4, .VAL3
    beq .cmpOK2
    +printAtPosImmediate 1, 0, .ERR_TEST2, $A7, 13
.cmpOK2
    +printAtPosImmediate 2, 0, .TESTS_DONE, $A7, 9
    rts

testScrOut
    jsr initDrawing
    jsr renderPoints
    rts

!ct scr
.ALL_CHARS
!tx "abcdefghijklmnopqrstuvwxyz[]0123456789?"
!ct pet

testAllChangedChars
    jsr initDrawing
    lda #COLOR_WHITE
    jsr setOutputColor
    +printAtPosImmediate 0, 0, .ALL_CHARS, $A7, 26+10+3
    rts


.testSquare
    +setGlobalVolume 15
    +setBeepADSR 8, 10, 15, 7, 1 
    +setFrequency $14B4, 1                     ; frequency $14B4
    +setSquareWidth $300, 1
    +turnWaveOn SQUARE, 1                    ; set SAWTOOTH and turn key bit on
    rts


.squareOff
    +turnWaveOff SQUARE, 1                  ; set SWATOOTH and turn key bit off
    rts


.testTriangle
    +setGlobalVolume 15
    +setBeepADSR 8, 10, 15, 7, 1 
    +setFrequency $14B4, 1                     ; frequency $14B4
    +turnWaveOn TRIANGLE, 1                    ; set SAWTOOTH and turn key bit on
    rts


.triangleOff
    +turnWaveOff TRIANGLE, 1                  ; set SWATOOTH and turn key bit off
    rts

.testSawtooth
    +setGlobalVolume 15
    +setBeepADSR 8, 10, 15, 7, 1 
    +setFrequency $14B4, 1                     ; frequency $14B4
    +turnWaveOn SAWTOOTH, 1                    ; set SAWTOOTH and turn key bit on
    rts


.sawtoothOff
    +turnWaveOff SAWTOOTH, 1                  ; set SWATOOTH and turn key bit off
    rts


!macro testSoundW .onFunc, .offFunc {
    jsr .onFunc

    lda #10
    sta TST_CNT

.delayCount
    ldx #255
    ldy #0
.count256
    iny
    bne .count256
    dex
    bne .count256
    dec TST_CNT
    bne .delayCount

    jsr .offFunc    
}

TST_CNT
!byte $00
testSound
    +testSoundW .testSquare, .squareOff
    +testSoundW .testTriangle, .triangleOff
    +testSoundW .testSawtooth, .sawtoothOff

    rts