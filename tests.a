!zone tests

!ct scr
.ERR_TEST1
!tx "test 1 not ok"
.ERR_TEST2
!tx "test 2 not ok"
.TESTS_DONE
!tx "test done"
!ct pet


.VAL1 !byte $00, $00
.VAL2 !byte $00, $00
.VAL3 !byte $00, $00
.VAL4 !byte $00, $00
test16BitArithmetic
    lda #COLOR_ORANGE
    jsr setOutputColor

    jsr clearScreen
    +load16BitImmediate $12F0, .VAL1
    +load16BitImmediate $0080, .VAL2
    +move16Bit .VAL2, .VAL4
    +load16BitImmediate $1370, .VAL3
    +add16Bit .VAL2, .VAL1
    +cmp16Bit .VAL1, .VAL3
    beq .cmpOK
    +printAtPosImmediate 0, 0, .ERR_TEST1, $A7, 13
.cmpOK
    +load16BitImmediate $0100, .VAL3
    +double16Bit .VAL4
    +cmp16Bit .VAL4, .VAL3
    beq .cmpOK2
    +printAtPosImmediate 1, 0, .ERR_TEST2, $A7, 13
.cmpOK2
    +printAtPosImmediate 2, 0, .TESTS_DONE, $A7, 9
    rts

testScrOut
    jsr initDrawing
    jsr renderPoints
    rts

!ct scr
.ALL_CHARS
!tx "abcdefghijklmnopqrstuvwxyz[]0123456789?"
!ct pet

testAllChangedChars
    jsr initDrawing
    lda #COLOR_WHITE
    jsr setOutputColor
    +printAtPosImmediate 0, 0, .ALL_CHARS, $A7, 26+10+3
    rts

!ct scr
.TXT_PRESS_KEY
!tx "press key                     "
.TXT_SOUND
!tx "sound playing. press key again"
.TXT_SND_OFF
!tx "sound off                     "
!ct pet

testSound
    jsr clearScreen
    +setGlobalVolume 15
    +setFrequency $14B4, 1                      ; frequency $14B4
    +setBeepADSR 2, 2, 13, 2, 1                 ; time attack: 2, time decay: 2, volume sustain 1, time release 0, voice 1

    +printAtPosImmediate 0, 0, .TXT_PRESS_KEY, $A7, 30
    jsr waitForKey
    +turnWaveOn TRIANGLE, 1                     ; set TRIANGLE and turn key bit on
    +printAtPosImmediate 0, 0, .TXT_SOUND, $A7, 30
    jsr waitForKey
    +turnWaveOff TRIANGLE, 1                    ; set TRIANGLE and turn key bit off
    +printAtPosImmediate 0, 0, .TXT_SND_OFF, $A7, 30

    rts


testPointCompare
    lda #$99
    sta HIGHSCORES
    lda #$99
    sta HIGHSCORES + 1
    lda #$99
    sta HIGHSCORES + 2
    lda #$77
    sta HIGHSCORES + 3
    lda #$77
    sta HIGHSCORES + 4
    lda #$77
    sta HIGHSCORES + 5
    lda #$77
    sta HIGHSCORES + 6
    lda #$77
    sta HIGHSCORES + 7
    lda #$77
    sta HIGHSCORES + 8
    lda #$77
    sta HIGHSCORES + 9
    lda #$77
    sta HIGHSCORES + 10
    lda #$78
    sta HIGHSCORES + 11

    ldx #9
    jsr comparePoints
    sta $0400               ; => $FF
    ldx #6
    jsr comparePoints
    sta $0401               ; => $00
    ldx #3
    jsr comparePoints
    sta $0402               ; => $01
    rts

 
 testFlash
    lda #COLOR_DARK_GREY
    jsr flashFrame
    rts


testSprite
    jsr diskSymbolOn
    jsr waitForKey
    jsr diskSymbolOff
    rts